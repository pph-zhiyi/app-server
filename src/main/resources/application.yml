server:
  port: 8888
  servlet:
    context-path: /

spring:
  application:
    name: app-server
  datasource:
    url: jdbc:mysql://localhost:3306/pph
    username: root
    password: pph123
    driver-class-name: com.mysql.jdbc.Driver
  redis:
    host: localhost     # Redis服务器地址
    port: 6379          # Redis服务器连接端口
    password:           # Redis服务器密码
    database: 0         # Redis数据库索引（默认为0）
    timeout: 3000       # 连接超时时间（毫秒）
    jedis:
      pool:
        max-active: 8   # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1    # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8     # 连接池中的最大空闲连接
        min-idle: 0     # 连接池中的最小空闲连接

mybatis:
  mapper-locations: classpath*:mapper/**/*.xml
  # 扫描 pojo 类的位置,在此处指明扫描实体类的包，在 mapper 中就可以不用写 pojo 类的全路径名了
  type-aliases-package: com.pph.demo.model
  configuration:
    # 打印执行 SQL (方法一)
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #开启驼峰命名转换
    map-underscore-to-camel-case: true
#logging:
#  level:
#    # 打印执行 SQL (方法二)
#    com.pph.demo.mapper: debug

jdbc.type: mysql

test: TEST