<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pph.demo.mapper.TopProductDataMapper">

    <insert id="insertSelective" parameterType="com.pph.demo.model.TopProductData">
        INSERT INTO `top_product_data`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="model != null">
                model,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="manufacturer != null">
                manufacturer,
            </if>
            <if test="standardType != null">
                standard_type,
            </if>
            <if test="function != null">
                function,
            </if>
            <if test="formFactor != null">
                form_factor,
            </if>
            <if test="powerType != null">
                power_type,
            </if>
            <if test="plug != null">
                plug,
            </if>
            <if test="inputVoltage != null">
                input_voltage,
            </if>
            <if test="acceptableInputVoltage != null">
                acceptable_input_voltage,
            </if>
            <if test="frequency != null">
                frequency,
            </if>
            <if test="phase != null">
                phase,
            </if>
            <if test="maximumInputCurrent != null">
                maximum_input_current,
            </if>
            <if test="maximumLineCurrent != null">
                maximum_line_current,
            </if>
            <if test="deratedInputCurrent != null">
                derated_input_current,
            </if>
            <if test="kva != null">
                kVA,
            </if>
            <if test="outputVoltage != null">
                output_voltage,
            </if>
            <if test="maximumTotalCurrentDraw != null">
                maximum_total_current_draw,
            </if>
            <if test="outletNumber != null">
                outlet_number,
            </if>
            <if test="c13 != null">
                C13,
            </if>
            <if test="c19 != null">
                C19,
            </if>
            <if test="universal != null">
                universal,
            </if>
            <if test="gb10a != null">
                GB10A,
            </if>
            <if test="gb16a != null">
                GB16A,
            </if>
            <if test="gbSmallFive != null">
                GB_small_five,
            </if>
            <if test="bsEn != null">
                BS_EN,
            </if>
            <if test="din != null">
                DIN,
            </if>
            <if test="nema515r != null">
                NEMA_5_15R,
            </if>
            <if test="nema520r != null">
                NEMA_5_20R,
            </if>
            <if test="nemaL620r != null">
                NEMA_L6_20R,
            </if>
            <if test="nemaL530r != null">
                NEMA_L5_30R,
            </if>
            <if test="nemaL630r != null">
                NEMA_L6_30R,
            </if>
            <if test="outletDetails != null">
                outlet_details,
            </if>
            <if test="shellMaterial != null">
                shell_material,
            </if>
            <if test="color != null">
                color,
            </if>
            <if test="inletlocation != null">
                inletLocation,
            </if>
            <if test="connectionSpecification != null">
                connection_specification,
            </if>
            <if test="junctionBox != null">
                junction_box,
            </if>
            <if test="industrialConnector != null">
                industrial_connector,
            </if>
            <if test="accessory != null">
                accessory,
            </if>
            <if test="cableType != null">
                cable_type,
            </if>
            <if test="cableLength != null">
                cable_length,
            </if>
            <if test="perphaseLight != null">
                perphase_light,
            </if>
            <if test="outletLight != null">
                outlet_light,
            </if>
            <if test="meterDisplay != null">
                meter_display,
            </if>
            <if test="hotReplacement != null">
                hot_replacement,
            </if>
            <if test="workTemperature != null">
                work_temperature,
            </if>
            <if test="workHumidity != null">
                work_humidity,
            </if>
            <if test="elevation != null">
                elevation,
            </if>
            <if test="storageTemperature != null">
                storage_temperature,
            </if>
            <if test="storageHumidity != null">
                storage_humidity,
            </if>
            <if test="storageElevation != null">
                storage_elevation,
            </if>
            <if test="unitDimensions != null">
                unit_dimensions,
            </if>
            <if test="unitWeight != null">
                unit_weight,
            </if>
            <if test="pduMetering != null">
                PDU_metering,
            </if>
            <if test="bank != null">
                bank,
            </if>
            <if test="outletMetering != null">
                outlet_metering,
            </if>
            <if test="outletSwitching != null">
                outlet_switching,
            </if>
            <if test="interface485 != null">
                interface_485,
            </if>
            <if test="interface232 != null">
                interface_232,
            </if>
            <if test="usbAInterface != null">
                USB_A_interface,
            </if>
            <if test="usbBInterface != null">
                USB_B_interface,
            </if>
            <if test="sensorInterface != null">
                sensor_interface,
            </if>
            <if test="wireCommunication != null">
                wire_communication,
            </if>
            <if test="breakerMonitoring != null">
                breaker_monitoring,
            </if>
            <if test="rcm != null">
                RCM,
            </if>
            <if test="neutralConductorMonitoring != null">
                neutral_conductor_monitoring,
            </if>
            <if test="networkBandwidth != null">
                network_bandwidth,
            </if>
            <if test="screenDisplay != null">
                screen_display,
            </if>
            <if test="selflock != null">
                selfLock,
            </if>
            <if test="spd != null">
                SPD,
            </if>
            <if test="fuse != null">
                fuse,
            </if>
            <if test="perphaseBreaker != null">
                perphase_breaker,
            </if>
            <if test="outletBreaker != null">
                outlet_breaker,
            </if>
            <if test="conformance != null">
                conformance,
            </if>
            <if test="rohs != null">
                RoHS,
            </if>
            <if test="reach != null">
                REACH,
            </if>
            <if test="pep != null">
                PEP,
            </if>
            <if test="eoli != null">
                EOLI,
            </if>
            <if test="ec200666 != null">
                EC_2006_66,
            </if>
            <if test="proposition65Warning != null">
                proposition_65_warning,
            </if>
            <if test="otherEnvironmentalProtection != null">
                other_environmental_protection,
            </if>
            <if test="logo != null">
                LOGO,
            </if>
            <if test="shippingDimensions != null">
                shipping_dimensions,
            </if>
            <if test="shippingWeigh != null">
                shipping_weigh,
            </if>
            <if test="specialInstruction != null">
                special_instruction,
            </if>
            <if test="warranty != null">
                warranty,
            </if>
            <if test="marketClassification != null">
                market_classification,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModify != null">
                gmt_modify,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="model != null">
                #{model,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="manufacturer != null">
                #{manufacturer,jdbcType=VARCHAR},
            </if>
            <if test="standardType != null">
                #{standardType,jdbcType=VARCHAR},
            </if>
            <if test="function != null">
                #{function,jdbcType=VARCHAR},
            </if>
            <if test="formFactor != null">
                #{formFactor,jdbcType=VARCHAR},
            </if>
            <if test="powerType != null">
                #{powerType,jdbcType=VARCHAR},
            </if>
            <if test="plug != null">
                #{plug,jdbcType=VARCHAR},
            </if>
            <if test="inputVoltage != null">
                #{inputVoltage,jdbcType=VARCHAR},
            </if>
            <if test="acceptableInputVoltage != null">
                #{acceptableInputVoltage,jdbcType=VARCHAR},
            </if>
            <if test="frequency != null">
                #{frequency,jdbcType=VARCHAR},
            </if>
            <if test="phase != null">
                #{phase,jdbcType=VARCHAR},
            </if>
            <if test="maximumInputCurrent != null">
                #{maximumInputCurrent,jdbcType=VARCHAR},
            </if>
            <if test="maximumLineCurrent != null">
                #{maximumLineCurrent,jdbcType=VARCHAR},
            </if>
            <if test="deratedInputCurrent != null">
                #{deratedInputCurrent,jdbcType=VARCHAR},
            </if>
            <if test="kva != null">
                #{kva,jdbcType=VARCHAR},
            </if>
            <if test="outputVoltage != null">
                #{outputVoltage,jdbcType=VARCHAR},
            </if>
            <if test="maximumTotalCurrentDraw != null">
                #{maximumTotalCurrentDraw,jdbcType=VARCHAR},
            </if>
            <if test="outletNumber != null">
                #{outletNumber,jdbcType=VARCHAR},
            </if>
            <if test="c13 != null">
                #{c13,jdbcType=VARCHAR},
            </if>
            <if test="c19 != null">
                #{c19,jdbcType=VARCHAR},
            </if>
            <if test="universal != null">
                #{universal,jdbcType=VARCHAR},
            </if>
            <if test="gb10a != null">
                #{gb10a,jdbcType=VARCHAR},
            </if>
            <if test="gb16a != null">
                #{gb16a,jdbcType=VARCHAR},
            </if>
            <if test="gbSmallFive != null">
                #{gbSmallFive,jdbcType=VARCHAR},
            </if>
            <if test="bsEn != null">
                #{bsEn,jdbcType=VARCHAR},
            </if>
            <if test="din != null">
                #{din,jdbcType=VARCHAR},
            </if>
            <if test="nema515r != null">
                #{nema515r,jdbcType=VARCHAR},
            </if>
            <if test="nema520r != null">
                #{nema520r,jdbcType=VARCHAR},
            </if>
            <if test="nemaL620r != null">
                #{nemaL620r,jdbcType=VARCHAR},
            </if>
            <if test="nemaL530r != null">
                #{nemaL530r,jdbcType=VARCHAR},
            </if>
            <if test="nemaL630r != null">
                #{nemaL630r,jdbcType=VARCHAR},
            </if>
            <if test="outletDetails != null">
                #{outletDetails,jdbcType=VARCHAR},
            </if>
            <if test="shellMaterial != null">
                #{shellMaterial,jdbcType=VARCHAR},
            </if>
            <if test="color != null">
                #{color,jdbcType=VARCHAR},
            </if>
            <if test="inletlocation != null">
                #{inletlocation,jdbcType=VARCHAR},
            </if>
            <if test="connectionSpecification != null">
                #{connectionSpecification,jdbcType=VARCHAR},
            </if>
            <if test="junctionBox != null">
                #{junctionBox,jdbcType=VARCHAR},
            </if>
            <if test="industrialConnector != null">
                #{industrialConnector,jdbcType=VARCHAR},
            </if>
            <if test="accessory != null">
                #{accessory,jdbcType=VARCHAR},
            </if>
            <if test="cableType != null">
                #{cableType,jdbcType=VARCHAR},
            </if>
            <if test="cableLength != null">
                #{cableLength,jdbcType=VARCHAR},
            </if>
            <if test="perphaseLight != null">
                #{perphaseLight,jdbcType=VARCHAR},
            </if>
            <if test="outletLight != null">
                #{outletLight,jdbcType=VARCHAR},
            </if>
            <if test="meterDisplay != null">
                #{meterDisplay,jdbcType=VARCHAR},
            </if>
            <if test="hotReplacement != null">
                #{hotReplacement,jdbcType=VARCHAR},
            </if>
            <if test="workTemperature != null">
                #{workTemperature,jdbcType=VARCHAR},
            </if>
            <if test="workHumidity != null">
                #{workHumidity,jdbcType=VARCHAR},
            </if>
            <if test="elevation != null">
                #{elevation,jdbcType=VARCHAR},
            </if>
            <if test="storageTemperature != null">
                #{storageTemperature,jdbcType=VARCHAR},
            </if>
            <if test="storageHumidity != null">
                #{storageHumidity,jdbcType=VARCHAR},
            </if>
            <if test="storageElevation != null">
                #{storageElevation,jdbcType=VARCHAR},
            </if>
            <if test="unitDimensions != null">
                #{unitDimensions,jdbcType=VARCHAR},
            </if>
            <if test="unitWeight != null">
                #{unitWeight,jdbcType=VARCHAR},
            </if>
            <if test="pduMetering != null">
                #{pduMetering,jdbcType=VARCHAR},
            </if>
            <if test="bank != null">
                #{bank,jdbcType=VARCHAR},
            </if>
            <if test="outletMetering != null">
                #{outletMetering,jdbcType=VARCHAR},
            </if>
            <if test="outletSwitching != null">
                #{outletSwitching,jdbcType=VARCHAR},
            </if>
            <if test="interface485 != null">
                #{interface485,jdbcType=VARCHAR},
            </if>
            <if test="interface232 != null">
                #{interface232,jdbcType=VARCHAR},
            </if>
            <if test="usbAInterface != null">
                #{usbAInterface,jdbcType=VARCHAR},
            </if>
            <if test="usbBInterface != null">
                #{usbBInterface,jdbcType=VARCHAR},
            </if>
            <if test="sensorInterface != null">
                #{sensorInterface,jdbcType=VARCHAR},
            </if>
            <if test="wireCommunication != null">
                #{wireCommunication,jdbcType=VARCHAR},
            </if>
            <if test="breakerMonitoring != null">
                #{breakerMonitoring,jdbcType=VARCHAR},
            </if>
            <if test="rcm != null">
                #{rcm,jdbcType=VARCHAR},
            </if>
            <if test="neutralConductorMonitoring != null">
                #{neutralConductorMonitoring,jdbcType=VARCHAR},
            </if>
            <if test="networkBandwidth != null">
                #{networkBandwidth,jdbcType=VARCHAR},
            </if>
            <if test="screenDisplay != null">
                #{screenDisplay,jdbcType=VARCHAR},
            </if>
            <if test="selflock != null">
                #{selflock,jdbcType=VARCHAR},
            </if>
            <if test="spd != null">
                #{spd,jdbcType=VARCHAR},
            </if>
            <if test="fuse != null">
                #{fuse,jdbcType=VARCHAR},
            </if>
            <if test="perphaseBreaker != null">
                #{perphaseBreaker,jdbcType=VARCHAR},
            </if>
            <if test="outletBreaker != null">
                #{outletBreaker,jdbcType=VARCHAR},
            </if>
            <if test="conformance != null">
                #{conformance,jdbcType=VARCHAR},
            </if>
            <if test="rohs != null">
                #{rohs,jdbcType=VARCHAR},
            </if>
            <if test="reach != null">
                #{reach,jdbcType=VARCHAR},
            </if>
            <if test="pep != null">
                #{pep,jdbcType=VARCHAR},
            </if>
            <if test="eoli != null">
                #{eoli,jdbcType=VARCHAR},
            </if>
            <if test="ec200666 != null">
                #{ec200666,jdbcType=VARCHAR},
            </if>
            <if test="proposition65Warning != null">
                #{proposition65Warning,jdbcType=VARCHAR},
            </if>
            <if test="otherEnvironmentalProtection != null">
                #{otherEnvironmentalProtection,jdbcType=VARCHAR},
            </if>
            <if test="logo != null">
                #{logo,jdbcType=VARCHAR},
            </if>
            <if test="shippingDimensions != null">
                #{shippingDimensions,jdbcType=VARCHAR},
            </if>
            <if test="shippingWeigh != null">
                #{shippingWeigh,jdbcType=VARCHAR},
            </if>
            <if test="specialInstruction != null">
                #{specialInstruction,jdbcType=VARCHAR},
            </if>
            <if test="warranty != null">
                #{warranty,jdbcType=VARCHAR},
            </if>
            <if test="marketClassification != null">
                #{marketClassification,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModify != null">
                #{gmtModify,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.pph.demo.model.TopProductData">
        UPDATE `top_product_data`
        <set>
            <if test="model != null">
                model = #{model,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="manufacturer != null">
                manufacturer = #{manufacturer,jdbcType=VARCHAR},
            </if>
            <if test="standardType != null">
                standard_type = #{standardType,jdbcType=VARCHAR},
            </if>
            <if test="function != null">
                function = #{function,jdbcType=VARCHAR},
            </if>
            <if test="formFactor != null">
                form_factor = #{formFactor,jdbcType=VARCHAR},
            </if>
            <if test="powerType != null">
                power_type = #{powerType,jdbcType=VARCHAR},
            </if>
            <if test="plug != null">
                plug = #{plug,jdbcType=VARCHAR},
            </if>
            <if test="inputVoltage != null">
                input_voltage = #{inputVoltage,jdbcType=VARCHAR},
            </if>
            <if test="acceptableInputVoltage != null">
                acceptable_input_voltage = #{acceptableInputVoltage,jdbcType=VARCHAR},
            </if>
            <if test="frequency != null">
                frequency = #{frequency,jdbcType=VARCHAR},
            </if>
            <if test="phase != null">
                phase = #{phase,jdbcType=VARCHAR},
            </if>
            <if test="maximumInputCurrent != null">
                maximum_input_current = #{maximumInputCurrent,jdbcType=VARCHAR},
            </if>
            <if test="maximumLineCurrent != null">
                maximum_line_current = #{maximumLineCurrent,jdbcType=VARCHAR},
            </if>
            <if test="deratedInputCurrent != null">
                derated_input_current = #{deratedInputCurrent,jdbcType=VARCHAR},
            </if>
            <if test="kva != null">
                kVA = #{kva,jdbcType=VARCHAR},
            </if>
            <if test="outputVoltage != null">
                output_voltage = #{outputVoltage,jdbcType=VARCHAR},
            </if>
            <if test="maximumTotalCurrentDraw != null">
                maximum_total_current_draw = #{maximumTotalCurrentDraw,jdbcType=VARCHAR},
            </if>
            <if test="outletNumber != null">
                outlet_number = #{outletNumber,jdbcType=VARCHAR},
            </if>
            <if test="c13 != null">
                C13 = #{c13,jdbcType=VARCHAR},
            </if>
            <if test="c19 != null">
                C19 = #{c19,jdbcType=VARCHAR},
            </if>
            <if test="universal != null">
                universal = #{universal,jdbcType=VARCHAR},
            </if>
            <if test="gb10a != null">
                GB10A = #{gb10a,jdbcType=VARCHAR},
            </if>
            <if test="gb16a != null">
                GB16A = #{gb16a,jdbcType=VARCHAR},
            </if>
            <if test="gbSmallFive != null">
                GB_small_five = #{gbSmallFive,jdbcType=VARCHAR},
            </if>
            <if test="bsEn != null">
                BS_EN = #{bsEn,jdbcType=VARCHAR},
            </if>
            <if test="din != null">
                DIN = #{din,jdbcType=VARCHAR},
            </if>
            <if test="nema515r != null">
                NEMA_5_15R = #{nema515r,jdbcType=VARCHAR},
            </if>
            <if test="nema520r != null">
                NEMA_5_20R = #{nema520r,jdbcType=VARCHAR},
            </if>
            <if test="nemaL620r != null">
                NEMA_L6_20R = #{nemaL620r,jdbcType=VARCHAR},
            </if>
            <if test="nemaL530r != null">
                NEMA_L5_30R = #{nemaL530r,jdbcType=VARCHAR},
            </if>
            <if test="nemaL630r != null">
                NEMA_L6_30R = #{nemaL630r,jdbcType=VARCHAR},
            </if>
            <if test="outletDetails != null">
                outlet_details = #{outletDetails,jdbcType=VARCHAR},
            </if>
            <if test="shellMaterial != null">
                shell_material = #{shellMaterial,jdbcType=VARCHAR},
            </if>
            <if test="color != null">
                color = #{color,jdbcType=VARCHAR},
            </if>
            <if test="inletlocation != null">
                inletLocation = #{inletlocation,jdbcType=VARCHAR},
            </if>
            <if test="connectionSpecification != null">
                connection_specification = #{connectionSpecification,jdbcType=VARCHAR},
            </if>
            <if test="junctionBox != null">
                junction_box = #{junctionBox,jdbcType=VARCHAR},
            </if>
            <if test="industrialConnector != null">
                industrial_connector = #{industrialConnector,jdbcType=VARCHAR},
            </if>
            <if test="accessory != null">
                accessory = #{accessory,jdbcType=VARCHAR},
            </if>
            <if test="cableType != null">
                cable_type = #{cableType,jdbcType=VARCHAR},
            </if>
            <if test="cableLength != null">
                cable_length = #{cableLength,jdbcType=VARCHAR},
            </if>
            <if test="perphaseLight != null">
                perphase_light = #{perphaseLight,jdbcType=VARCHAR},
            </if>
            <if test="outletLight != null">
                outlet_light = #{outletLight,jdbcType=VARCHAR},
            </if>
            <if test="meterDisplay != null">
                meter_display = #{meterDisplay,jdbcType=VARCHAR},
            </if>
            <if test="hotReplacement != null">
                hot_replacement = #{hotReplacement,jdbcType=VARCHAR},
            </if>
            <if test="workTemperature != null">
                work_temperature = #{workTemperature,jdbcType=VARCHAR},
            </if>
            <if test="workHumidity != null">
                work_humidity = #{workHumidity,jdbcType=VARCHAR},
            </if>
            <if test="elevation != null">
                elevation = #{elevation,jdbcType=VARCHAR},
            </if>
            <if test="storageTemperature != null">
                storage_temperature = #{storageTemperature,jdbcType=VARCHAR},
            </if>
            <if test="storageHumidity != null">
                storage_humidity = #{storageHumidity,jdbcType=VARCHAR},
            </if>
            <if test="storageElevation != null">
                storage_elevation = #{storageElevation,jdbcType=VARCHAR},
            </if>
            <if test="unitDimensions != null">
                unit_dimensions = #{unitDimensions,jdbcType=VARCHAR},
            </if>
            <if test="unitWeight != null">
                unit_weight = #{unitWeight,jdbcType=VARCHAR},
            </if>
            <if test="pduMetering != null">
                PDU_metering = #{pduMetering,jdbcType=VARCHAR},
            </if>
            <if test="bank != null">
                bank = #{bank,jdbcType=VARCHAR},
            </if>
            <if test="outletMetering != null">
                outlet_metering = #{outletMetering,jdbcType=VARCHAR},
            </if>
            <if test="outletSwitching != null">
                outlet_switching = #{outletSwitching,jdbcType=VARCHAR},
            </if>
            <if test="interface485 != null">
                interface_485 = #{interface485,jdbcType=VARCHAR},
            </if>
            <if test="interface232 != null">
                interface_232 = #{interface232,jdbcType=VARCHAR},
            </if>
            <if test="usbAInterface != null">
                USB_A_interface = #{usbAInterface,jdbcType=VARCHAR},
            </if>
            <if test="usbBInterface != null">
                USB_B_interface = #{usbBInterface,jdbcType=VARCHAR},
            </if>
            <if test="sensorInterface != null">
                sensor_interface = #{sensorInterface,jdbcType=VARCHAR},
            </if>
            <if test="wireCommunication != null">
                wire_communication = #{wireCommunication,jdbcType=VARCHAR},
            </if>
            <if test="breakerMonitoring != null">
                breaker_monitoring = #{breakerMonitoring,jdbcType=VARCHAR},
            </if>
            <if test="rcm != null">
                RCM = #{rcm,jdbcType=VARCHAR},
            </if>
            <if test="neutralConductorMonitoring != null">
                neutral_conductor_monitoring = #{neutralConductorMonitoring,jdbcType=VARCHAR},
            </if>
            <if test="networkBandwidth != null">
                network_bandwidth = #{networkBandwidth,jdbcType=VARCHAR},
            </if>
            <if test="screenDisplay != null">
                screen_display = #{screenDisplay,jdbcType=VARCHAR},
            </if>
            <if test="selflock != null">
                selfLock = #{selflock,jdbcType=VARCHAR},
            </if>
            <if test="spd != null">
                SPD = #{spd,jdbcType=VARCHAR},
            </if>
            <if test="fuse != null">
                fuse = #{fuse,jdbcType=VARCHAR},
            </if>
            <if test="perphaseBreaker != null">
                perphase_breaker = #{perphaseBreaker,jdbcType=VARCHAR},
            </if>
            <if test="outletBreaker != null">
                outlet_breaker = #{outletBreaker,jdbcType=VARCHAR},
            </if>
            <if test="conformance != null">
                conformance = #{conformance,jdbcType=VARCHAR},
            </if>
            <if test="rohs != null">
                RoHS = #{rohs,jdbcType=VARCHAR},
            </if>
            <if test="reach != null">
                REACH = #{reach,jdbcType=VARCHAR},
            </if>
            <if test="pep != null">
                PEP = #{pep,jdbcType=VARCHAR},
            </if>
            <if test="eoli != null">
                EOLI = #{eoli,jdbcType=VARCHAR},
            </if>
            <if test="ec200666 != null">
                EC_2006_66 = #{ec200666,jdbcType=VARCHAR},
            </if>
            <if test="proposition65Warning != null">
                proposition_65_warning = #{proposition65Warning,jdbcType=VARCHAR},
            </if>
            <if test="otherEnvironmentalProtection != null">
                other_environmental_protection = #{otherEnvironmentalProtection,jdbcType=VARCHAR},
            </if>
            <if test="logo != null">
                LOGO = #{logo,jdbcType=VARCHAR},
            </if>
            <if test="shippingDimensions != null">
                shipping_dimensions = #{shippingDimensions,jdbcType=VARCHAR},
            </if>
            <if test="shippingWeigh != null">
                shipping_weigh = #{shippingWeigh,jdbcType=VARCHAR},
            </if>
            <if test="specialInstruction != null">
                special_instruction = #{specialInstruction,jdbcType=VARCHAR},
            </if>
            <if test="warranty != null">
                warranty = #{warranty,jdbcType=VARCHAR},
            </if>
            <if test="marketClassification != null">
                market_classification = #{marketClassification,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModify != null">
                gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="adds" parameterType="java.util.List">
        INSERT INTO `top_product_data` (
        `model`,
        `status`,
        `manufacturer`,
        `standard_type`,
        `function`,
        `form_factor`,
        `power_type`,
        `plug`,
        `input_voltage`,
        `acceptable_input_voltage`,
        `frequency`,
        `phase`,
        `maximum_input_current`,
        `maximum_line_current`,
        `derated_input_current`,
        `kVA`,
        `output_voltage`,
        `maximum_total_current_draw`,
        `outlet_number`,
        `C13`,
        `C19`,
        `universal`,
        `GB10A`,
        `GB16A`,
        `GB_small_five`,
        `BS_EN`,
        `DIN`,
        `NEMA_5_15R`,
        `NEMA_5_20R`,
        `NEMA_L6_20R`,
        `NEMA_L5_30R`,
        `NEMA_L6_30R`,
        `outlet_details`,
        `shell_material`,
        `color`,
        `inletLocation`,
        `connection_specification`,
        `junction_box`,
        `industrial_connector`,
        `accessory`,
        `cable_type`,
        `cable_length`,
        `perphase_light`,
        `outlet_light`,
        `meter_display`,
        `hot_replacement`,
        `work_temperature`,
        `work_humidity`,
        `elevation`,
        `storage_temperature`,
        `storage_humidity`,
        `storage_elevation`,
        `unit_dimensions`,
        `unit_weight`,
        `PDU_metering`,
        `bank`,
        `outlet_metering`,
        `outlet_switching`,
        `interface_485`,
        `interface_232`,
        `USB_A_interface`,
        `USB_B_interface`,
        `sensor_interface`,
        `wire_communication`,
        `breaker_monitoring`,
        `RCM`,
        `neutral_conductor_monitoring`,
        `network_bandwidth`,
        `screen_display`,
        `selfLock`,
        `SPD`,
        `fuse`,
        `perphase_breaker`,
        `outlet_breaker`,
        `conformance`,
        `RoHS`,
        `REACH`,
        `PEP`,
        `EOLI`,
        `EC_2006_66`,
        `proposition_65_warning`,
        `other_environmental_protection`,
        `LOGO`,
        `shipping_dimensions`,
        `shipping_weigh`,
        `special_instruction`,
        `warranty`,
        `market_classification`
        )
        VALUES
        <foreach collection="lists" item="item" index="index" separator=",">
            (
            #{item.model,jdbcType=VARCHAR},
            #{item.status,jdbcType=VARCHAR},
            #{item.manufacturer,jdbcType=VARCHAR},
            #{item.standardType,jdbcType=VARCHAR},
            #{item.function,jdbcType=VARCHAR},
            #{item.formFactor,jdbcType=VARCHAR},
            #{item.powerType,jdbcType=VARCHAR},
            #{item.plug,jdbcType=VARCHAR},
            #{item.inputVoltage,jdbcType=VARCHAR},
            #{item.acceptableInputVoltage,jdbcType=VARCHAR},
            #{item.frequency,jdbcType=VARCHAR},
            #{item.phase,jdbcType=VARCHAR},
            #{item.maximumInputCurrent,jdbcType=VARCHAR},
            #{item.maximumLineCurrent,jdbcType=VARCHAR},
            #{item.deratedInputCurrent,jdbcType=VARCHAR},
            #{item.kva,jdbcType=VARCHAR},
            #{item.outputVoltage,jdbcType=VARCHAR},
            #{item.maximumTotalCurrentDraw,jdbcType=VARCHAR},
            #{item.outletNumber,jdbcType=VARCHAR},
            #{item.c13,jdbcType=VARCHAR},
            #{item.c19,jdbcType=VARCHAR},
            #{item.universal,jdbcType=VARCHAR},
            #{item.gb10a,jdbcType=VARCHAR},
            #{item.gb16a,jdbcType=VARCHAR},
            #{item.gbSmallFive,jdbcType=VARCHAR},
            #{item.bsEn,jdbcType=VARCHAR},
            #{item.din,jdbcType=VARCHAR},
            #{item.nema515r,jdbcType=VARCHAR},
            #{item.nema520r,jdbcType=VARCHAR},
            #{item.nemaL620r,jdbcType=VARCHAR},
            #{item.nemaL530r,jdbcType=VARCHAR},
            #{item.nemaL630r,jdbcType=VARCHAR},
            #{item.outletDetails,jdbcType=VARCHAR},
            #{item.shellMaterial,jdbcType=VARCHAR},
            #{item.color,jdbcType=VARCHAR},
            #{item.inletlocation,jdbcType=VARCHAR},
            #{item.connectionSpecification,jdbcType=VARCHAR},
            #{item.junctionBox,jdbcType=VARCHAR},
            #{item.industrialConnector,jdbcType=VARCHAR},
            #{item.accessory,jdbcType=VARCHAR},
            #{item.cableType,jdbcType=VARCHAR},
            #{item.cableLength,jdbcType=VARCHAR},
            #{item.perphaseLight,jdbcType=VARCHAR},
            #{item.outletLight,jdbcType=VARCHAR},
            #{item.meterDisplay,jdbcType=VARCHAR},
            #{item.hotReplacement,jdbcType=VARCHAR},
            #{item.workTemperature,jdbcType=VARCHAR},
            #{item.workHumidity,jdbcType=VARCHAR},
            #{item.elevation,jdbcType=VARCHAR},
            #{item.storageTemperature,jdbcType=VARCHAR},
            #{item.storageHumidity,jdbcType=VARCHAR},
            #{item.storageElevation,jdbcType=VARCHAR},
            #{item.unitDimensions,jdbcType=VARCHAR},
            #{item.unitWeight,jdbcType=VARCHAR},
            #{item.pduMetering,jdbcType=VARCHAR},
            #{item.bank,jdbcType=VARCHAR},
            #{item.outletMetering,jdbcType=VARCHAR},
            #{item.outletSwitching,jdbcType=VARCHAR},
            #{item.interface485,jdbcType=VARCHAR},
            #{item.interface232,jdbcType=VARCHAR},
            #{item.usbAInterface,jdbcType=VARCHAR},
            #{item.usbBInterface,jdbcType=VARCHAR},
            #{item.sensorInterface,jdbcType=VARCHAR},
            #{item.wireCommunication,jdbcType=VARCHAR},
            #{item.breakerMonitoring,jdbcType=VARCHAR},
            #{item.rcm,jdbcType=VARCHAR},
            #{item.neutralConductorMonitoring,jdbcType=VARCHAR},
            #{item.networkBandwidth,jdbcType=VARCHAR},
            #{item.screenDisplay,jdbcType=VARCHAR},
            #{item.selflock,jdbcType=VARCHAR},
            #{item.spd,jdbcType=VARCHAR},
            #{item.fuse,jdbcType=VARCHAR},
            #{item.perphaseBreaker,jdbcType=VARCHAR},
            #{item.outletBreaker,jdbcType=VARCHAR},
            #{item.conformance,jdbcType=VARCHAR},
            #{item.rohs,jdbcType=VARCHAR},
            #{item.reach,jdbcType=VARCHAR},
            #{item.pep,jdbcType=VARCHAR},
            #{item.eoli,jdbcType=VARCHAR},
            #{item.ec200666,jdbcType=VARCHAR},
            #{item.proposition65Warning,jdbcType=VARCHAR},
            #{item.otherEnvironmentalProtection,jdbcType=VARCHAR},
            #{item.logo,jdbcType=VARCHAR},
            #{item.shippingDimensions,jdbcType=VARCHAR},
            #{item.shippingWeigh,jdbcType=VARCHAR},
            #{item.specialInstruction,jdbcType=VARCHAR},
            #{item.warranty,jdbcType=VARCHAR},
            #{item.marketClassification,jdbcType=VARCHAR}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        `model` = VALUES(`model`),
        `status` = VALUES(`status`),
        `manufacturer` = VALUES(`manufacturer`),
        `standard_type` = VALUES(`standard_type`),
        `function` = VALUES(`function`),
        `form_factor` = VALUES(`form_factor`),
        `power_type` = VALUES(`power_type`),
        `plug` = VALUES(`plug`),
        `input_voltage` = VALUES(`input_voltage`),
        `acceptable_input_voltage` = VALUES(`acceptable_input_voltage`),
        `frequency` = VALUES(`frequency`),
        `phase` = VALUES(`phase`),
        `maximum_input_current` = VALUES(`maximum_input_current`),
        `maximum_line_current` = VALUES(`maximum_line_current`),
        `derated_input_current` = VALUES(`derated_input_current`),
        `kVA` = VALUES(`kVA`),
        `output_voltage` = VALUES(`output_voltage`),
        `maximum_total_current_draw` = VALUES(`maximum_total_current_draw`),
        `outlet_number` = VALUES(`outlet_number`),
        `C13` = VALUES(`C13`),
        `C19` = VALUES(`C19`),
        `universal` = VALUES(`universal`),
        `GB10A` = VALUES(`GB10A`),
        `GB16A` = VALUES(`GB16A`),
        `GB_small_five` = VALUES(`GB_small_five`),
        `BS_EN` = VALUES(`BS_EN`),
        `DIN` = VALUES(`DIN`),
        `NEMA_5_15R` = VALUES(`NEMA_5_15R`),
        `NEMA_5_20R` = VALUES(`NEMA_5_20R`),
        `NEMA_L6_20R` = VALUES(`NEMA_L6_20R`),
        `NEMA_L5_30R` = VALUES(`NEMA_L5_30R`),
        `NEMA_L6_30R` = VALUES(`NEMA_L6_30R`),
        `outlet_details` = VALUES(`outlet_details`),
        `shell_material` = VALUES(`shell_material`),
        `color` = VALUES(`color`),
        `inletLocation` = VALUES(`inletLocation`),
        `connection_specification` = VALUES(`connection_specification`),
        `junction_box` = VALUES(`junction_box`),
        `industrial_connector` = VALUES(`industrial_connector`),
        `accessory` = VALUES(`accessory`),
        `cable_type` = VALUES(`cable_type`),
        `cable_length` = VALUES(`cable_length`),
        `perphase_light` = VALUES(`perphase_light`),
        `outlet_light` = VALUES(`outlet_light`),
        `meter_display` = VALUES(`meter_display`),
        `hot_replacement` = VALUES(`hot_replacement`),
        `work_temperature` = VALUES(`work_temperature`),
        `work_humidity` = VALUES(`work_humidity`),
        `elevation` = VALUES(`elevation`),
        `storage_temperature` = VALUES(`storage_temperature`),
        `storage_humidity` = VALUES(`storage_humidity`),
        `storage_elevation` = VALUES(`storage_elevation`),
        `unit_dimensions` = VALUES(`unit_dimensions`),
        `unit_weight` = VALUES(`unit_weight`),
        `PDU_metering` = VALUES(`PDU_metering`),
        `bank` = VALUES(`bank`),
        `outlet_metering` = VALUES(`outlet_metering`),
        `outlet_switching` = VALUES(`outlet_switching`),
        `interface_485` = VALUES(`interface_485`),
        `interface_232` = VALUES(`interface_232`),
        `USB_A_interface` = VALUES(`USB_A_interface`),
        `USB_B_interface` = VALUES(`USB_B_interface`),
        `sensor_interface` = VALUES(`sensor_interface`),
        `wire_communication` = VALUES(`wire_communication`),
        `breaker_monitoring` = VALUES(`breaker_monitoring`),
        `RCM` = VALUES(`RCM`),
        `neutral_conductor_monitoring` = VALUES(`neutral_conductor_monitoring`),
        `network_bandwidth` = VALUES(`network_bandwidth`),
        `screen_display` = VALUES(`screen_display`),
        `selfLock` = VALUES(`selfLock`),
        `SPD` = VALUES(`SPD`),
        `fuse` = VALUES(`fuse`),
        `perphase_breaker` = VALUES(`perphase_breaker`),
        `outlet_breaker` = VALUES(`outlet_breaker`),
        `conformance` = VALUES(`conformance`),
        `RoHS` = VALUES(`RoHS`),
        `REACH` = VALUES(`REACH`),
        `PEP` = VALUES(`PEP`),
        `EOLI` = VALUES(`EOLI`),
        `EC_2006_66` = VALUES(`EC_2006_66`),
        `proposition_65_warning` = VALUES(`proposition_65_warning`),
        `other_environmental_protection` = VALUES(`other_environmental_protection`),
        `LOGO` = VALUES(`LOGO`),
        `shipping_dimensions` = VALUES(`shipping_dimensions`),
        `shipping_weigh` = VALUES(`shipping_weigh`),
        `special_instruction` = VALUES(`special_instruction`),
        `warranty` = VALUES(`warranty`),
        `market_classification` = VALUES(`market_classification`)
    </insert>

    <select id="queryProductByTerms" resultType="com.pph.demo.model.TopProductData"
            parameterType="java.util.Map">
        SELECT * FROM `top_product_data`
        <where>
            <if test="model != null">
                `model` LIKE CONCAT('%', #{model}, '%')
            </if>
            <if test="function != null and function.size() > 0">
                AND `function`
                <foreach item="item" collection="function" separator="," open="IN (" close=")" index="">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="manufacturer != null and manufacturer.size() > 0">
                AND `manufacturer`
                <foreach item="item" collection="manufacturer" separator="," open="IN (" close=")" index="">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="standardType != null and standardType.size() > 0">
                AND `standard_type`
                <foreach item="item" collection="standardType" separator="," open="IN (" close=")" index="">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
        ORDER BY `gmt_modify` DESC
        <if test="isPage != null and isPage == true">
            LIMIT #{offSet}, #{pageSize}
        </if>
    </select>

    <select id="queryTotalByTerms" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT COUNT(*) FROM `top_product_data`
        <where>
            <if test="model != null">
                `model` LIKE CONCAT('%', #{model}, '%')
            </if>
            <if test="function != null and function.size() > 0">
                AND `function`
                <foreach item="item" collection="function" separator="," open="IN (" close=")" index="">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="manufacturer != null and manufacturer.size() > 0">
                AND `manufacturer`
                <foreach item="item" collection="manufacturer" separator="," open="IN (" close=")" index="">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="standardType != null and standardType.size() > 0">
                AND `standard_type`
                <foreach item="item" collection="standardType" separator="," open="IN (" close=")" index="">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
    </select>
</mapper>