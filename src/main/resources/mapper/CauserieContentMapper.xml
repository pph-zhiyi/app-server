<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pph.demo.mapper.CauserieContentMapper">
    <resultMap id="BaseResultMap" type="com.pph.demo.model.CauserieContent">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="user" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="gmt_create" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="gmt_modify" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.pph.demo.model.CauserieContent">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="user" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="gmt_create" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="gmt_modify" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, user, name, gmt_create, gmt_modify
    </sql>
    <sql id="Blob_Column_List">
      content
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from causerie_content
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
      delete from causerie_content
      where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.pph.demo.model.CauserieContent">
      insert into causerie_content (id, user, name,
        gmt_create, gmt_modify, content
        )
      values (#{id,jdbcType=BIGINT}, #{user,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.pph.demo.model.CauserieContent">
        insert into causerie_content
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="user != null">
                user,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModify != null">
                gmt_modify,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="user != null">
                #{user,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModify != null">
                #{gmtModify,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.pph.demo.model.CauserieContent">
        update causerie_content
        <set>
            <if test="user != null">
                user = #{user,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModify != null">
                gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pph.demo.model.CauserieContent">
      update causerie_content
      set user = #{user,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=LONGVARCHAR}
      where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pph.demo.model.CauserieContent">
      update causerie_content
      set user = #{user,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
      where id = #{id,jdbcType=BIGINT}
    </update>

    <resultMap id="queryCauserieByTermsRM" type="com.pph.demo.vo.response.causerie.QueryCauserieRes">
        <id column="id" jdbcType="BIGINT" javaType="java.lang.Long" property="id"/>
        <result column="user" jdbcType="VARCHAR" javaType="java.lang.String" property="authorUser"/>
        <result column="name" jdbcType="VARCHAR" javaType="java.lang.String" property="authorName"/>
        <result column="content" jdbcType="VARCHAR" javaType="java.lang.String" property="content"/>
        <result column="commit_time" jdbcType="TIMESTAMP" javaType="java.util.Date" property="commitTime"/>
        <collection property="likes" ofType="com.pph.demo.model.CauserieContentLike">
            <id column="like_id" jdbcType="BIGINT" javaType="java.lang.Long" property="id"/>
            <result column="content_id" jdbcType="BIGINT" javaType="java.lang.Long" property="contentId"/>
            <result column="like_user" jdbcType="VARCHAR" javaType="java.lang.String" property="likeUser"/>
            <result column="like_name" jdbcType="VARCHAR" javaType="java.lang.String" property="likeName"/>
            <result column="is_like" jdbcType="INTEGER" javaType="java.lang.Integer" property="isLike"/>
            <result column="gmt_create" jdbcType="TIMESTAMP" javaType="java.util.Date" property="gmtCreate"/>
            <result column="gmt_modify" jdbcType="TIMESTAMP" javaType="java.util.Date" property="gmtModify"/>
        </collection>
        <collection property="comments" ofType="com.pph.demo.model.CauserieContentComment">
            <id column="comment_id" jdbcType="BIGINT" javaType="java.lang.Long" property="id"/>
            <result column="comment_content_id" jdbcType="BIGINT" javaType="java.lang.Long" property="contentId"/>
            <result column="author_user" jdbcType="VARCHAR" javaType="java.lang.String" property="authorUser"/>
            <result column="author_name" jdbcType="VARCHAR" javaType="java.lang.String" property="authorName"/>
            <result column="comment_user" jdbcType="VARCHAR" javaType="java.lang.String" property="commentUser"/>
            <result column="comment_name" jdbcType="VARCHAR" javaType="java.lang.String" property="commentName"/>
            <result column="old_content" jdbcType="VARCHAR" javaType="java.lang.String" property="oldContent"/>
            <result column="comment_content" jdbcType="VARCHAR" javaType="java.lang.String" property="commentContent"/>
            <result column="is_content_author" javaType="java.lang.Boolean" property="isContentAuthor"/>
            <result column="comment_create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" property="gmtCreate"/>
            <result column="comment_gmt_modify" jdbcType="TIMESTAMP" javaType="java.util.Date" property="gmtModify"/>
        </collection>
    </resultMap>
    <sql id="queryCauserieByTermsColumn">
        a.`id`,
        a.`user`,
        c.`name`,
        a.`content`,
        a.`gmt_create` AS `commit_time`,
        b.`id` AS `like_id`,
        b.`content_id`,
        b.`like_user`,
        d.`name` AS `like_name`,
        b.`is_like`,
        b.`gmt_create`,
        b.`gmt_modify`,
        ccc.`id` AS `comment_id`,
        ccc.`content_id` AS `comment_content_id`,
        ccc.`author_user`,
        e.`name` AS `author_name`,
        ccc.`comment_user`,
        f.`name` AS `comment_name`,
        `ccc`.`comment_content`,
        `ccc`.`old_content`,
        `ccc`.`is_content_author`,
        `ccc`.`gmt_create` AS `comment_create_time`,
        `ccc`.`gmt_modify` AS `comment_gmt_modify`
    </sql>
    <select id="queryCauserieByTerms" parameterType="java.util.Map" resultMap="queryCauserieByTermsRM">
        SELECT
        <include refid="queryCauserieByTermsColumn"/>
        FROM
        `causerie_content` AS a
        LEFT JOIN `causerie_content_like` AS b ON a.`id` = b.`content_id`
        LEFT JOIN `causerie_content_comment` AS `ccc` ON a.`id` = ccc.`content_id`
        LEFT JOIN `user` AS c ON a.`user` = c.`user`
        LEFT JOIN `user` AS d ON b.`like_user` = d.`user`
        LEFT JOIN `user` AS e ON ccc.`author_user` = e.`user`
        LEFT JOIN `user` AS f ON ccc.`comment_user` = f.`user`
        <where>
            <if test="isPage != null and isPage == true">
                a.`id` IN ( SELECT INSTALL.`id` FROM ( SELECT `id` FROM `causerie_content`
                <where>
                    <if test="id != null">
                        `id` = #{id}
                    </if>
                    <if test="user != null">
                        AND `user` = #{user}
                    </if>
                    <if test="name != null">
                        AND `name` = #{name}
                    </if>
                </where>
                ORDER BY `gmt_modify` DESC
                LIMIT #{offSet}, #{pageSize} ) AS INSTALL )
            </if>
        </where>
        ORDER BY a.`gmt_modify` DESC
    </select>
    <select id="queryCountByTerms" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM
        `causerie_content`
        <where>
            <if test="user != null">
                `id` = #{id}
            </if>
            <if test="user != null">
                AND `user` = #{user}
            </if>
            <if test="name != null">
                AND `name` = #{name}
            </if>
        </where>
    </select>

    <select id="queryLikeByUser" parameterType="com.pph.demo.vo.request.causerie.LikeCauserieReq"
            resultType="com.pph.demo.model.CauserieContentLike">
        SELECT *
        FROM `causerie_content_like`
        WHERE `content_id` = #{contentId}
        AND `like_user` = #{user}
    </select>

    <delete id="deleteLikeByUser" parameterType="com.pph.demo.vo.request.causerie.LikeCauserieReq">
        DELETE FROM `causerie_content_like`
        WHERE `content_id` = #{contentId}
        AND `like_user` = #{user}
    </delete>

    <update id="updateLikeByUser" parameterType="com.pph.demo.vo.request.causerie.LikeCauserieReq">
        UPDATE `causerie_content_like`
        SET `is_like` = #{like}
        WHERE `content_id` = #{contentId}
        AND `like_user` = #{user}
    </update>

    <insert id="addLikeByUser" parameterType="com.pph.demo.vo.request.causerie.LikeCauserieReq">
        INSERT INTO `causerie_content_like`(`content_id`, `like_user`, `is_like`)
        VALUES (#{contentId}, #{user}, #{like});
    </insert>

    <insert id="addCauserie" parameterType="com.pph.demo.vo.request.causerie.AddCauserieReq">
        INSERT INTO `causerie_content`(`user`, `content`)
        VALUES (#{user}, #{content});
    </insert>

    <delete id="deleteCauserie" parameterType="com.pph.demo.vo.request.causerie.DeleteCauserieReq">
        DELETE FROM `causerie_content`
        WHERE `id` = #{id}
        AND `user` = #{user}
    </delete>

    <delete id="deleteCauserieLike" parameterType="com.pph.demo.vo.request.causerie.DeleteCauserieReq">
        DELETE FROM `causerie_content_like`
        WHERE `id` = #{id}
    </delete>

    <insert id="addCauserieComment" parameterType="com.pph.demo.vo.request.causerie.AddCauserieCommentReq"
            useGeneratedKeys="true" keyProperty="id">
        <selectKey>
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO `causerie_content_comment`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contentId != null">
                `content_id`,
            </if>
            <if test="authorUser != null">
                `author_user`,
            </if>
            <if test="commentUser != null">
                `comment_user`,
            </if>
            <if test="commentContent != null">
                `comment_content`,
            </if>
            <if test="oldContent != null">
                `old_content`,
            </if>
            <if test="isContentAuthor != null">
                `is_content_author`,
            </if>
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            <if test="contentId != null">
                #{contentId},
            </if>
            <if test="authorUser != null">
                #{authorUser},
            </if>
            <if test="commentUser != null">
                #{commentUser},
            </if>
            <if test="commentContent != null">
                #{commentContent},
            </if>
            <if test="oldContent != null">
                #{oldContent},
            </if>
            <if test="isContentAuthor != null">
                #{isContentAuthor},
            </if>
        </trim>
    </insert>
</mapper>